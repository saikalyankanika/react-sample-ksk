@Library('shared-pipeline@master') _

pipeline {
    agent none
    stages {
        stage('Pod Template') {
            agent any // Allocate an agent for this stage
            steps {
                script {
                    // @Library('shared-pipeline@master') _

                    def output_work = env.WORKSPACE
                    println "Current directory: ${output_work}"

                    def output = sh(script: 'pwd', returnStdout: true).trim()
                    println "Current directory: ${output}"

                     echo sh(script: 'env|sort', returnStdout: true)

                    init()

                    // def initScript = new GroovyShell().parse(new File('init.groovy'))
                    // initScript.call()
                }
            }
        }
    }
}

